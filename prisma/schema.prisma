// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// use 'npx prisma migrate dev'     to update database after changes are made

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id             String         @id @default(uuid())
  name           String
  email          String
  deleted        Boolean        @default(false)
  vendor_profile VendorProfile?
  is_admin       Boolean        @default(false)
  is_super_admin Boolean        @default(false)
}

model VendorProfile {
  id                 Int     @id @default(autoincrement())
  vendor_name        String
  vendor_description String
  vendor_image_path  String?

  // in the vendor profile each vendor is going be related to one user, and we are going to get the ID from that user which we pass through the references part of the declaration, so we take the reference of that ID and we store it in the local field for this model which is user_id. 
  user          User          @relation(fields: [user_id], references: [id])
  // this is the field where it will be stored below
  user_id       String        @unique
  //Defining this weekly_booths value for use in the WeeklyBooth table as one to many using an empty array
  weekly_booths WeeklyBooth[]
}

model GlobalGoods {
  id    Int     @id @default(autoincrement())
  name  String
  image String?

  goods Good[]
}

model Good {
  id          Int     @id @default(autoincrement())
  description String
  image       String?
  price       Float

  //Forms the relationship between the 2 tables
  weekly_booths    WeeklyBooth @relation(fields: [weekly_booths_id], references: [id])
  weekly_booths_id Int

  global_good    GlobalGoods @relation(fields: [global_good_id], references: [id])
  global_good_id Int
}

model WeeklyBooth {
  id Int @id @default(autoincrement())

  //these lines are making the one to many relationship to the VendorProfile table as one Vendor may have many weekly booths of data
  vendor    VendorProfile @relation(fields: [vendor_id], references: [id])
  vendor_id Int

  //linking the market so that we can make a list of booths for each market date
  market    Market @relation(fields: [market_id], references: [id])
  market_id Int

  //List of goods at each individual weekly booth
  booth_goods Good[]
}

model Market {
  id          Int           @id @default(autoincrement())
  description String
  date        DateTime
  //list of booths that will be at each market date
  booth_list  WeeklyBooth[]
}
